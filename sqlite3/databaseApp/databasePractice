'''
Created on Aug 14, 2022

@author: nstru
'''

import sqlite3

# Connect to database
conn = sqlite3.connect('customer.db')

# Create cursor
c = conn.cursor()

""" Create a list of customers (Already executed, in database)
beatles = [('John', 'Lennon', 'yoko@ono.com'),
           ('Paul', 'McCartney', 'yellowsubmarine@gmail.com'),
           ('George', 'Harrison', 'whoops@gmail.com'),
           ('Ringo', 'Starr', 'drummerboy@beatlemania.com')]

c.executemany("INSERT INTO customers VALUES (?,?,?)", beatles)
"""

''' Commented out as table is only created once
# Create a table
c.execute("""CREATE TABLE customers (
        first_name text,
        last_name text,
        email text
    )""")
    
# Delete a table
c.execute("DROP TABLE customers")
'''


''' Already updated
# Update Records

c.execute("""UPDATE customers SET first_name = 'John'
            WHERE rowid = 1
    """)

# c.execute("DELETE from customers WHERE rowid=7")


# Commit Changes
conn.commit()

'''


'''
# Query the Database
c.execute("SELECT rowid, * FROM customers WHERE last_name LIKE 'Le%' OR rowid = 2 LIMIT 1")

# Options: fetchone, fetchmany, fetchall

# print(c.fetchone())
# print(c.fetchmany())
# print(c.fetchall())

# Can also be used to create a variable
items = c.fetchall()

for item in items:
    # print(item[0] + " " + item[1] + ", " + item[2])
    print(item)
 

# print("Command executed")
'''

# Creating functions to call in database app
def show_all():
    '''Query database and return ALL records'''
    
    # Connect to database, create cursor
    conn = sqlite3.connect('customer.db')
    c = conn.cursor()
    
    c.execute("SELECT rowid, * FROM customers")
    items = c.fetchall()
    
    for item in items:
        print(item)
    
    # Close Connection
    conn.close()    


def add_one(first, last, email):
    '''Add a new record to the table'''
     
    # Connect to database, create cursor
    conn = sqlite3.connect('customer.db')
    c = conn.cursor()
    
    c.execute("INSERT INTO customers VALUES (?,?,?)", (first, last, email))
    
    # Commit changes and close connection
    conn.commit()
    conn.close()


def add_many(list):
    '''Add a new record to the table'''
     
    # Connect to database, create cursor
    conn = sqlite3.connect('customer.db')
    c = conn.cursor()
    
    c.executemany("INSERT INTO customers VALUES (?,?,?)", list)
    
    # Commit changes and close connection
    conn.commit()
    conn.close()

def delete_one(id):
    '''Deletes the enty with rowid provided'''
     
    # Connect to database, create cursor
    conn = sqlite3.connect('customer.db')
    c = conn.cursor()
    
    c.execute("DELETE from customers WHERE rowid = (?)", id)
    
    # Commit changes and close connection
    conn.commit()
    conn.close()

    

def email_lookup(email):
    '''Look up with WHERE'''
     
    # Connect to database, create cursor
    conn = sqlite3.connect('customer.db')
    c = conn.cursor()
    
    c.execute("SELECT * from customers WHERE email = (?)", (email,))
    items = c.fetchall()
    
    for item in items:
        print(item)
    
    # Commit changes and close connection
    conn.commit()
    conn.close()

    
    

# Commit Changes
conn.commit()

# Close Connection
conn.close()
